name: build binaries

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ inputs.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/            
        key: ${{ inputs.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ inputs.os }}-cargo-
    - name: Check Format
      run: cargo fmt --all -- --check
    - name: Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    - name: Build
      run: cargo build --release
    - name: Run tests
      run: cargo test 

    # - name: Get Version from Cargo
    #   id: version
    #   run: echo "version=$(cargo metadata --no-deps --format-version 1 | jq '.packages[0].version' -r)" >> $GITHUB_OUTPUT

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.os }}
        path: target/release/marked-space${{ inputs.os == 'windows-latest' && '.exe' || '' }}
        retention-days: 5
        if-no-files-found: error